--
--// # Task
--
--// Implement a script to retrieve the specified holders of [$SWTH token](https://bscscan.com/token/0x250b211ee44459dad5cd3bca803dd6a7ecb5d46c) on the [Binance Smart Chain]
--// (https://coinmarketcap.com/alexandria/article/what-is-binance-smart-chain) network.
--
--// BSC Block Explorer: [https://bscscan.com/](https://bscscan.com/)
--
--// $SWTH Token Contract: `0xc0ecb8499d8da2771abcbf4091db7f65158f1468`
--
--// Addresses to look up:
--
--// ```json
--// 0xb5d4f343412dc8efb6ff599d790074d0f1e8d430
--// 0x0020c5222a24e4a96b720c06b803fb8d34adc0af
--// 0xd1d8b2aae2ebb2acf013b803bc3c24ca1303a392
--// ```
--
--// How your script will be tested:
--
--// ```bash
--// ts-node ./retrieve-holders.ts
--// ```
--
--// <aside>
--// ‚ö†Ô∏è Using [api.bscscan.com](http://api.bscscan.com) uses a third party API service to retrieve the result, and is not
-- considered a valid solution because it does not directly interact with the chain.
--
--// </aside>
--
--// ## Expected Output:
--
--// The output should be organized as one `address amount` per line.
--
--// `amount` should be formatted to the correct number of decimal places
--
--// *Note, **a**s this is live production contract, the amount you retrieve will be different from the sample below.*
--
--// ```
--// 0xb5d4f343412dc8efb6ff599d790074d0f1e8d430 99,888,874.62734227
--// 0x0020c5222a24e4a96b720c06b803fb8d34adc0af 7,970,573.69197209
--// 0xd1d8b2aae2ebb2acf013b803bc3c24ca1303a392 2,894,918.96152958
--// ‚Ä¶
--// ```
--
--// <aside>
--// üí° **Hint**: You may need to use the NPM module [ethers.js](https://docs.ethers.io/v5/) to complete this task.
--
--// </aside>

--The explanation of the Code:-
--1. Importing the ethers library:

import { ethers } from 'ethers';

--2.Defining the addresses to look up:

const addressesToLookUp = [
  '0xb5d4f343412dc8efb6ff599d790074d0f1e8d430',
  '0x0020c5222a24e4a96b720c06b803fb8d34adc0af',
  '0xd1d8b2aae2ebb2acf013b803bc3c24ca1303a392',
];

--3.Defining the contract address:
const SWTH_TOKEN_CONTRACT_ADDRESS = '0xc0ecb8499d8da2771abcbf4091db7f65158f1468';

--4.retrieveHolders function:
async function retrieveHolders(): Promise<void> {
--5.Connecting to a JSON-RPC provider:
--We create a new instance of the JsonRpcProvider class from the ethers library, which provides a way to
--connect to a JSON-RPC endpoint. In this case, we are connecting to the endpoint for the
  const provider = new ethers.providers.JsonRpcProvider('https://bsc-dataseed1.binance.org/');
--6. Creating a new contract instance
--We create a new instance of the Contract class from the ethers library,
--which provides a way to interact with a smart contract on the blockchain.
--We pass the SWTH_TOKEN_CONTRACT_ADDRESS and an empty array for the ABI (contract interface) as
--arguments to the constructor. The ABI is not required for this example because we are only calling the
--balanceOf method on the contract, which is a standard ERC20 method that is automatically recognized by ethers.
  const contract = new ethers.Contract(SWTH_TOKEN_CONTRACT_ADDRESS, [], provider);


--We use the map method on the addressesToLookUp array to create an array of promises,
--where each promise retrieves the balance of a single address by calling balanceOf

  const promises = addressesToLookUp.map(async (address) => {
    const balance = await contract.balanceOf(address);
    console.log(`${address} ${balance.toString()}`);
  });

  await Promise.all(promises);
}

retrieveHolders().catch(console.error);
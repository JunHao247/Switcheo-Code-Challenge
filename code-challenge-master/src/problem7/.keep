-- # Task

-- Tables:

-- `balances`

-- | id | address | denom | amount | block_height |
-- | --- | --- | --- | --- | --- |
-- | 1 | 0xabab.. | usdc | 50000000000000 | 733755 |
-- | 2 | 0x99cc.. | swth | -20000000 | 733757 |
-- | 3 | 0xabab.. | usdc | -50000000000 | 733855 |
-- | ... | ... | ... | ... | ... |

-- Each row in the `balances` table records the balance change. e.g. if address `0x99cc..` account is being deducted by `20000000swth`, it will be represented as row id=2. 

-- A denom is akin to currency.

-- `trades`

-- | id | address | denom | amount | block_height |
-- | --- | --- | --- | --- | --- |
-- | 1 | 0xabab.. | swth | 400000000000 | 733756 |
-- | 2 | 0x99cc.. | usdc | 3500000000000 | 733757 |
-- | 3 | 0x67f3.. | swth | 72000000000000 | 733758 |
-- | ... | ... | ... | ... | ... |

-- Each row in the `trades` table records the trade information. e.g. if address `0x99cc..` made a trade of `3500000000000usdc`, it will be represented as row id=2.

-- Write an SQL query that returns the the list of addresses which has recently made a trade, and wallet has at least $500 (total balance) in it.

-- <aside>
-- ⚠️ Note: there may be more than one row per address in each of the `trades` and `balances` tables.
-- i.e. user made more than 1 trade, or have more than 1 change in their balance over time.

-- </aside>

-- Constraints:

-- 1. Recently made a trade means block_height strictly greater than 730000.
-- 2. There is a total of 3 denoms. 
--     1. usdc is worth $0.000001
--     2. swth is worth $0.00000005
--     3. tmz is worth $0.003
-- 3. Note that the usd values of the denoms changes frequently and we want to compute the usd value of the wallet on the fly without storing them into a table.

-- Note:

-- 1. You are recommended to use PostgreSQL because that is what we are using. However, feel free to use a language
 -- you are more familiar with.
-- 2. You’re not supposed to write a function/procedure, the solution should be entirely implemented in one query statement.



-- Here is the SQL query that should return the list of addresses 
-- which have recently made a trade and have a wallet balance of at least $500:

-- Select the addresses from the balances table
SELECT b.address
-- Join the balances and trades table on the address column
FROM balances b
JOIN trades t ON b.address = t.address
-- Filter the trades that have been made after block height 730000
WHERE t.block_height > 730000
-- Group the results by address
GROUP BY b.address
-- Calculate the total balance of each wallet by converting the denom to USD and summing the amount
HAVING SUM(CASE 
              WHEN b.denom = 'usdc' THEN b.amount * 0.000001
              WHEN b.denom = 'swth' THEN b.amount * 0.00000005
              WHEN b.denom = 'tmz' THEN b.amount * 0.003
           END) >= 500;
-- Select only the addresses whose total balance is at least $500.


-- This query joins the balances and trades tables on the address column and alters
-- the trades made after block height 730000. It then groups the results by the address column and
-- calculates the total balance of each wallet by summing the converted USD values of each balance.
-- Finally, it selects only the addresses whose total balance is at least $500.
--1). We start the query by selecting the address column from the balances table.
--2). Next, we join the balances table (aliased as 'b') with the trades table (aliased as 't') on the address column, so that we can get information on both the recent trades and the wallet balances of each address.
--3).We add a WHERE clause to alter only the trades that have been made after block height 730000, which we were told in the problem statement is considered recent.
--4).We add a GROUP BY clause to group the results by address, so that we only get one result per address.
--5). Finally, we use a HAVING clause to only return the addresses whose total balance is at least $500.
--We calculate the total balance of each wallet by converting the balance amount of each denom to its USD value using a
--CASE statement, and then summing these USD values. If the sum is greater than or equal to 500, the address will be returned.
--Note that in this query, we assume that all balance amounts are given in the smallest unit of each currency (e.g. cents for USD), which is why we need to multiply the amounts by the appropriate conversion factor to get the USD value.
--If the amounts were already given in their USD value, this conversion step would not be necessary.
